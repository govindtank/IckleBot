{"name":"IckleBot","tagline":"IckleBot /'ikəl'bôt/ noun. 1 A boilerplate code generator with a simplified threading and event model. 2 A runtime dependency injection framework.","body":"###\"For quick and maintainable Android development\"\r\nInjecting components, binding event listeners or running tasks is a breeze.   \r\n\r\n<br>\r\n###Introduction\r\n<hr>\r\nLeverage features by extending `IckleActivity`.\r\n\r\n```java\r\npublic class TokensActivity extends IckleActivity {\r\n}\r\n```\r\n\r\n<br>\r\nManage activity configuration.\r\n\r\n```java\r\n@Fullscreen\r\n@Layout(R.layout.act_tokens)\r\npublic class TokensActivity extends IckleActivity {\r\n}\r\n```\r\n\r\n<br>\r\nInject views and resources.\r\n\r\n```java\r\n@Fullscreen\r\n@Layout(R.layout.act_tokens)\r\npublic class TokensActivity extends IckleActivity {\r\n\r\n    @InjectView(R.id.token)\r\n    private TextView token;\r\n\r\n    @InjectInteger(R.integer.public_token)\r\n    private Integer publicToken;\r\n\t\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\t\t\r\n        super.onResume();\r\n        token.setText(publicToken.toString());\r\n    }\r\n}\r\n```\r\n\r\n<br>\r\n...or let IckleBot figure it out.\r\n\r\n```java\r\n@InjectAll\r\n@Fullscreen\r\n@Layout(R.layout.act_tokens)\r\npublic class TokensActivity extends IckleActivity {\r\n\r\n    private TextView token;\r\n    private Integer public_token;\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\t\t\r\n        super.onResume();\r\n        token.setText(public_token.toString());\r\n    }\r\n}\r\n```\r\n> Notice that the variable names now assume the id.\r\n\r\n<br>\r\nPreserve instance state.\r\n\r\n```java\r\n@InjectAll\r\n@Fullscreen\r\n@Layout(R.layout.act_tokens)\r\npublic class TokensActivity extends IckleActivity {\r\n\r\n    private TextView token;\r\n    \r\n    @Stateful\r\n    private Double randomId = Math.random();\r\n\r\n\t\r\n    @Override\r\n    protected void onResume() {\r\n\t\t\r\n        super.onResume();\r\n        token.setText(randomId.toString());\r\n    }\r\n}\r\n```\r\n\r\n<br>\r\nBind an event listener.\r\n\r\n```java\r\n@Layout(R.layout.act_messenger)\r\n@Title(R.string.ttl_act_messenger)\r\npublic class MessengerActivity extends IckleActivity {\r\n\r\n    @InjectView(R.id.btn_send)\r\n    private Button btnSend;\r\n\r\n    ...   \r\n\r\n    @Click(R.id.btn_send)\r\n    protected void submit(Button button) {\r\n\t\t\r\n        button.setText(\"Sending...\");\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\n<br>\r\nRun a background task.\r\n\r\n```java\r\n@Layout(R.layout.act_news)\r\n@Title(R.string.ttl_act_news)\r\npublic class NewsActivity extends IckleActivity {\r\n\r\n    private static final int ASYNC_SYNC_NEWS = 0;\r\n    ...\r\n\r\n    @Override\r\n    protected void onResume() {\r\n\r\n        super.onResume();\r\n        runAsyncTask(ASYNC_SYNC_NEWS);\r\n    }\r\n\r\n    @Async(ASYNC_SYNC_NEWS)\r\n    private void refreshNews() { \r\n        ....\r\n    }\r\n}\r\n```\r\n\r\n<br>\r\nCheck for a data connection.\r\n\r\n```java\r\n@Layout(R.layout.act_mail)\r\n@Title(R.string.ttl_act_mail)\r\npublic class MailActivity extends IckleActivity {\r\n\r\n    private void sync() {\r\n    \r\n        if(network().isConnected()) {\r\n\r\n            inbox.refresh();\r\n        }\r\n        else {\r\n\r\n            ...\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n<br>\r\n###Setup\r\n<hr>\r\nFor Maven Based Android Projects dd the following dependency in your project's `pom.xml`.\r\n\r\n```xml\r\n<dependency>\r\n   <groupId>com.lonepulse</groupId>\r\n   <artifactId>icklebot</artifactId>\r\n   <version>1.1.4</version>\r\n   <type>apklib</type>\r\n</dependency>\r\n```\r\n\r\n<br>\r\nFor Standard Android Projects download the repository ([tarball](https://github.com/sahan/IckleBot/archive/master.tar.gz), [zipfile](https://github.com/sahan/IckleBot/archive/master.zip)) or clone it and import it as an existing project in Eclipse.\r\n\r\n```bash\r\n$ git clone git://github.com/sahan/IckleBot.git\r\n```\r\n\r\n<br>\r\n###Wiki\r\n<hr>\r\nRead the wiki for more information on dependency injection or the simplified event model.\r\n\r\n1. [Quickstart](https://github.com/sahan/IckleBot/wiki/Quickstart)\r\n\r\n2. [Manage Activity Configuration](https://github.com/sahan/IckleBot/wiki/Manage-Activity-Configuration)\r\n\r\n3. [Inject Views and Resources](https://github.com/sahan/IckleBot/wiki/Inject-Views-and-Resources)\r\n\r\n4. [Inject System Services, Application Instances and POJOs](https://github.com/sahan/IckleBot/wiki/Inject-System-Services,-Application-Instances-and-POJOs)\r\n\r\n5. [Leverage Implicit Injection](https://github.com/sahan/IckleBot/wiki/Leverage-Implicit-Injection)\r\n\r\n6. [Use IckleBot's Threading Model](https://github.com/sahan/IckleBot/wiki/Use-IckleBot's-Threading-Model)\r\n  \r\n7. [Use IckleBot's Event Model](https://github.com/sahan/IckleBot/wiki/Use-IckleBot's-Event-Model)\r\n\r\n8. [Detect Network State](https://github.com/sahan/IckleBot/wiki/Detect-Network-State)\r\n  \r\n9. [Avoid Coupling with IckleActivity](https://github.com/sahan/IckleBot/wiki/Avoid-Coupling-with-IckleActivity)   \r\n\r\n<br>\r\n###License\r\n<hr>\r\nThis library is licensed under [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).","google":"UA-40937518-1","note":"Don't delete this file! It's used internally to help with page regeneration."}